##################
Quelques commandes
##################

.. contents:: Sommaire

Commandes
=========

Chercher
--------

::

    # Affichier la liste des fichier
    ls

    # Affichier la liste des fichier y compris ceux des sous repertoires
    find .

    # Affiner la recherche avec un grep
    find . | grep toto

    # Fichier modifie dans les 60 derniere minutes.
    find .  -mmin -60

    # mise a jour de la base de recherche des fichiers
    updatedb
    # Recherche dans la base des fichiers
    locate <nomfichier>

    # Recherche dans les fichiers
    grep [-r][-i][-E][-l] <textarechercher> <fichierconcerner> 
    # -r recursif
    # -i insensible a la casse
    # -l retourne la liste des fichier et non pas les lignes correspondantes
    # -E expression reguliere

    # exemple 
    grep -E '(toto|tata)' file.txt # cherche les ligne avec toto ou tata dans file.txt
    grep -ril 'toto' * # cherche les ligne avec toto dans tous les fichiers (et tous les fichiers des repertoires)


    awk
    ack
    sed
    sort
    uniq
    head
    tail
    multitail


Taille
======

::

    # voir la liste des fichiers avec leur tailles
    ls -l

    # calcul la taille d'un repertoire
    du -sh <repertoire>

    # voir le remplissage des partitions
    df -h

Gestion des processus
---------------------

::

    # Liste des processus avec details
    ps -auwwx

    # Liste des processus en temps reel
    top 

    # Liste des processus afficher en arbre
    pstree -p

    # <pid> = numero du processus
    # Demander a un processus de s'arreter
    kill <pid>
    # Tuer un processus (violent)
    kill -9 <pid>
    # Tuer toutes les instances d'un programme
    killall <nomprogramme>

Changer la priorite du processus :
plus le chiffre est grand, plus le processus es gentil,
et laisse les autres processus agir en priorite.
On utilise ceci pour un processus gourmand non prioritaire.

::

    renice <nouvelle_priorite> -p <pid>

Tache de fonds ::

    # lancer une commade en tache de fond :
    <commade> &
    # voir les commandes en tache de fond :
    jobs
    # ReEntrer dans une commande en tache de fond :
    fg

    # Detacher un processus de son pere :
    nohup <command> &
    # utilite : on peut eteindre la console, sans arreter le processus.

    # Mettre en tache de fond le processus courrant du terminal : 
    Touches [Ctr+Z]

    # Detacher le jobs en tache de fond tu terminal
    # <id> est l'identifiant indiqué par la commande jobs
    disown %<id>

    # recuperer un processus détaché sur un nouveau terminal
    # need to be installed before
    sudo aptitude install reptyr
    # sur certain system besoin de permettre la recuperation
    #    echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope
    reptyr <pid>
    # remettre comme à l'origine
    #    echo 1 | sudo tee /proc/sys/kernel/yama/ptrace_scope


Connexion distante
------------------

ssh :

    # se connecter en ssh sur une machine distante (port par default 22)
    ssh [-P <port>] [user@]machine


Transfert
---------

scp ::

    # copie via ssh
    scp [-r] [-P <port>][ [user@]machine:]/path/file [[user@]machine:]/path/file 
    # -r pour recursif
    # <port> : port de la machine distante (22 par defaut)


    # If there is an interrupt in a transfert file
    # you can use rsync for continue
    rsync --partial --progress --rsh=ssh user@]machine:]/path/file /path/localfile 

wget ::

    # telechargement d'une url
    wget  <url>
    # -c : continue
    # -P : folder destination


curl ::

    # les urls peuvent être http, https, ftp

    # voir le contenu de l'url (sur la sortie standard)
    curl <url>

    # telecharger une url
    curl -o <file> <url>
    # ou
    curl <url> > <file>

    # Authentification (http/ftp)
    curl -u <username>:<password> <url>


    # utilisation de variables 
    curl -o files_#1 http://domain/page?param=[1-100]
    curl -o files_#1 http://domain/page?param=[a-z]

    ## autres options :
    # -L : permet de suivre les redirections.
    # --head : affiche les headers seulements
    # --dump-header <headers_file> : met les headers dans un fichier
    # -d "<params>" : envoie un formulaire en POST (syntaxe d'un get)
    # -e : referer
    # -A : user agent
    # -C : continue
    # --limit-rate <nb>B : limitation vitesse en Byte par seconde
    # -x <proxy>:<port> : utilisation d'un proxy
    # --mail-from <from> --mail-rcpt <to> smtp://<smtpserver> : send a mail

lftp ::

    # exemple d'utilisation avec ssl
    set ftp:ssl-force true
    set ssl:verify-certificate no
    set ftp:ssl-protect-data true
    connect <server>
    login <login>
    put file.tgz


sftp ::

    sftp -v -b file user@serveursftp

::

    scp
    curl
    rtorrent
    aria2
    ncftp

Synchro
-------

::

    rsync
    duplicity
    rsyncrypto
    backuppc


Outils
======

pipes 
-----

::

    xargs 
    parallel


todo tool
---------

::

    taskwarrior



Restrict
--------

::

    chroot
    ulimit


Monitoring tools
----------------

::

    sysstat ?!
    sadf
    sar
    sysreport ?!


Debug et trace
--------------

::

    strace
