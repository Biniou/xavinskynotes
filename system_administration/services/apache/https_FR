#####
HTTPS
#####


Certificat https
================

Generer les certificats pour le https

Autosigne
---------

Version certificat SSL autosigné avec password ::

    # creer les clefs :

    openssl req -x509 -newkey rsa:4096 -out new.cert.cert -keyout cert.key -days 365
    # (IMPORTANT uniquement repondre le caractere '*' a la question
    # Common Name (eg, YOUR name) []:*
    # Enlever le mot de passe de la cle (necessaire pour https) :

    # la taille de la clef ajoute de la sécurtié
    # exemple valide : 1024 2048 4096

    # option d'encyptage
    # -des3 : encrypte avec triple DES (par defaut)
    # -des : encrypte avec DES
    # -nodes : "no DES" : n'encrypte pas la clef privé dans un fichier PKCS#12.
    # -idea : encrypte avec idea
    # -seed : encrypte avec seed
    # -aes128, -aes192, -aes256 : encrypte PEM avec cbc aes
    # -camellia128, -camellia192, -camellia256 : encrypte PEM avec cbc camellia

    # il es possible de passer les réponses au questions interractive en parametres
    # exemple :
    # -subj "/C=FR/ST=FR/L=Paris/O=tekio/OU=https/CN=*/emailAddress=xav@tekio.org" 

    openssl rsa -in cert.key -out new.cert.key

    # detruire les fichiers temportaires et placer le tout dans /etc/apache2/ssl
    rm cert.key
    mkdir /etc/apache2/ssl
    mv new.cert.key /etc/apache2/ssl
    mv new.cert.cert /etc/apache2/ssl

    # changer le droit de fichier pour des questions de securité :
    chmod 600 /etc/apache2/ssl/*
    chown www-data:www-data /etc/apache2/ssl/*

    # redemarrer l'apache2 :
    /etc/init.d/apache2 restart

Startssl
--------

Version certificat signé par startsll.com ::

    # Creation cle privé RSA (Triple-DES / PEM)
    # avec une phrase pass.
    openssl genrsa -des3 -out server.key 1024 
    # On elimine ensuite la phrase pass :
    openssl rsa -in server.key -out server.key2
    # On crée la requête de certificat
    openssl req -new -key server.key2 -out server.csr
    # (IMPORTANT mettre le domaine ou l'IP (* est payant) )
    # Common Name (eg, YOUR name) []: 123.13.12.23
    # (IMPORTANT donner une adresse email valide)
    # Email Address []: votreadresse@domaine.com
    # (IMPORTANT retenir le challenge)
    # A challenge password [] : aretenir
    # Afficher le certificat pour la requete sur startsll.com
    # cat server.csr

    # Faire signer son certificat par startcom.
    # Aller sur : https://cert.startcom.org/?lang=fr
    # puis cliquer sur
    # Assistant de Création de Certificat
    # <https://cert.startcom.org/?app=101&lang=fr>
    # choisir classe 1 puis continuer.
    # choisir Server Certificate (Without CSR generation) puis continuer
    # Remplir Personal Registration Details:
    # Donner ensuite le certificat.

    # Un mail sera envoyé au choix à
    # webmaster@IPorDomain
    # hostmaster@IPorDomain
    # postmaster@IPorDomain

    # on recoit un code de verification
    # que l'on utilise dans le formulaire suivant.
    # pour l'instant pas de serveur de mail
    # de configurer... donc la suite un autre jour.

    # Apres avoir recu les certificat le fichier server.csr 
    # n'est plus utile.

Documentation apache sur les générations de certificats
<http://httpd.apache.org/docs/2.2/ssl/ssl_faq.html>


Configuration Apache
====================

Une fois les fichiers générés et placer dans /etc/apache2/ssl avec les bons droits,
on peut configurer apache.

Le principe de base sera de rajouter les configuration des host 
n
::

    SSLEngine on
    SSLCertificateFile    /path/to/this/server.crt2
    SSLCertificateKeyFile /path/to/this/server.key2

    ## autre options possibles.
    #SSLCipherSuite ALL:!ADH:RC4+SHA:+HIGH:+MEDIUM:+LOW:+EXP:+eNULL
    #SSLProtocol all -SSLv2


http to https
-------------

Remplacer les {config.*} par les bonnes valeurs.

Ajouter au virtualhost http ::

    Redirect permanent / https://{config.domain}/

Exemple complet ::

    <VirtualHost *:80>
        #ServerAdmin {config.admin_email}
        #ServerName {config.domain}
        #ServerAlias *.{config.domain}
        DocumentRoot /var/www
        LogLevel warn
        CustomLog /var/log/apache2/access.log combined
        ErrorLog /var/log/apache2/error.log
        Redirect permanent / https://{config.domain}/
        <Directory />
          Options FollowSymLinks
          AllowOverride None
        </Directory>
        <Directory /var/www/>
          Options Indexes FollowSymLinks MultiViews
          AllowOverride None
          Order allow,deny
          allow from all
        </Directory>
    </VirtualHost>

quelques redirection https
--------------------------

::

    ##  redirect https for a folder
    SSLRequireSSL 
    Redirect permanent /secure https://www.domain.com/secure
    ##
    RewriteEngine On
    RewriteCond %{SERVER_PORT} !^443$
    RewriteRule ^/(.*) https://%{SERVER_NAME}/$1 [L,R]
    ##
    RewriteEngine on
    ReWriteCond %{SERVER_PORT} !^443$
    RewriteRule ^/(.*) https://%{HTTP_HOST}/$1 [NC,R,L]

Un seul fichier pem
-------------------

A tester :: 

    cat apache-key.pem apache-cert.pem > apache.pem
    # voir si cela evite d'avoir a inquer deux fichier de params.

pass-phrase
-----------

A tester de nouveau : Configurer certificat avec une pass-phrase.

Dans la config Apache du virtualhost ::

    #SSLPassPhraseDialog  exec:/etc/apache2/ssl/pass-phrase.apache

Puis creer un fichier /etc/apache2/ssl/pass-phrase.apache ::

    #!/bin/sh
    echo "passphrase"

Et rendre ce fichier executable par apache ::

    chmod +x /etc/apache2/ssl/pass-phrase.apache
    chown www-data:www-data /etc/apache2/ssl/pass-phrase.apache

multiples domaines avec https
-----------------------------

Le multiple domain multiple key ssl2 avec apache2 est possible grâce à l'option : TLS SNI

La norme le permettant : http://www.rfc-editor.org/rfc/rfc6066.txt

Les navigateurs comptatibites  : https://alice.sni.velox.ch/

Necessite option "enable-tlsext" dans openssl (par default depuis 0.9.8j)

Necessite Apache >= 2.2.12 avec mod_ssl (pour TLS SNI capacity)


Pour accepter les navigateurs non compatibles TLS SNI ::

    SSLStrictSNIVHostCheck off

Le premier defini, sera le ssl par default si aucun autre "ServerName" ne correspond
dans les vhosts suivants.


