###########################
La conception de programmes
###########################

.. contents:: Sommaire

L'analyse et la réalisation sont les deux grandes étapes de
la conception de programme qui est généralement entouré d'une 
`gestion de projets </project_management/>`_.

=========
L'analyse
=========

L'analyse est le passage de la comprehension des exigences à la 
formulation des spécifications.
Lorsque la taille de l'équipe du projet est importante, j'utilise souvent UML.
Sinon, de simples fichiers textes explicatif et schemas sont suffisant.

Spécifications fonctionnelles
-----------------------------

Les cas d'utilisations (uses cases) c'est à dire la description des processus métier.

Contraintes
-----------
En particulier dans le milieu de l'embarqué, les contraintes matérielles sont fortes,
ce qui influence beaucoup l'architecture.

Architecture
------------

* matériel (serveurs, composants réseaux...)
* réseau (zones, ouvertures de ports)
* services accessible via le réseaux.
* systemes d'exploitations
* composants logicieles externes
* composants logicieles interne
* interfaces des composants et des services

Structure de données
--------------------

Les données necessaires au projets.

===========
Réalisation
===========

L'analyse fonctionnelle est le passage des spécifications à la creation du 
logiciel.

Algorithmique
-------------

La partie algorithmique est mathematique et conceptuelle qui cherchera la
maniere optimale de résoudre les spécifications. 
On essayera de diminuer au maximum la complexité algorithmique, c'est à dire la
quantité de ressources necessaire proportionnelement au traitement.

Implémentation
--------------

L'écriture ou modification de programme (code) à l'aide de 
`languages de programmation <languages>`

Qualité
-------

Documentation, Tests, Optimisation, correction de bugs.

Techniques
----------

* Developement de drivers
* Reverse Engineering
* MultiProcess, Multithread
* Les sockets

Performances
------------

* benchmark, tests de performance, tests au limites.
* audits de codes
* audits de protocoles
* scalabilité
* tolérance aux pannes
