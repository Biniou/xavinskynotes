###########
Performance
###########

.. contents:: Sommaire

Concatenation des chaines
=========================

Test effectué en python 2.7

preferer utiliser la methode "join" à l'opérateur '+'.

Le problème : l'opérateur '+' creer une nouvelle chaine à chaque addition,
ce qui cause une alocation memoire et une recopie.

Simple benchmark : ::

    import time
    a = [str(i) for i in range(100000)]
    t1 = time.time()
    s = ''
    for e in a:
        s += e
    t2 = time.time()
    print t2 - t1
    t1 = time.time()
    s = ''.join(a)
    t2 = time.time()
    print t2 - t1

Resultats ::

    0.0174679756165
    0.00216913223267

Gestion des erreurs
===================

Test effectué en python 2.7

Préferer tester plutôt que d'attraper une exception.
Le problème est que la levé d'un exception (qui ne fera rien) est couteuse en python (calcul du traceback...)

Simple benchmark : ::

    import time
    d = {}
    t1 = time.time()
    for i in xrange(1000000):
        if 'toto' in d:
            pass
        else:
            pass
    t2 = time.time()
    print t2 - t1
    t1 = time.time()
    for i in xrange(1000000):
        try:
            d['toto']
        except:
            pass
    t2 = time.time()
    print t2 - t1

Résultat ::

    0.0767540931702
    0.676504850388

